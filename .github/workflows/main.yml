# This workflow will build a docker container, publish it to Google Container Registry, and deploy it to GKE when there is a push to the "main" branch.
#
# To configure this workflow:
#
# 1. Ensure that your repository contains the necessary configuration for your Google Kubernetes Engine cluster, including deployment.yml, kustomization.yml, service.yml, etc.
#
# 2. Create and configure a Workload Identity Provider for GitHub (https://github.com/google-github-actions/auth#setting-up-workload-identity-federation)
#
# 3. Change the values for the GAR_LOCATION, GKE_ZONE, GKE_CLUSTER, IMAGE, REPOSITORY and DEPLOYMENT_NAME environment variables (below).
#
# For more support on how to run the workflow, please visit https://github.com/google-github-actions/setup-gcloud/tree/master/example-workflows/gke-kustomize

name: Build and Deploy

on:
  push:
    branches: [ "master" ]

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GAR_LOCATION: us-west1 # TODO: update region of the Artifact Registry
  GKE_CLUSTER: hmscluster    # TODO: update to cluster name
  GKE_ZONE: us-west1   # TODO: update to cluster zone
  DEPLOYMENT_NAME: "hmsnutritionist-deployment" # TODO: update to deployment name
  REPOSITORY: hmsrepository2 # TODO: update to Artifact Registry docker repository
  IMAGE: hmsnutritionist

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    permissions:
      contents: 'read'
      id-token: 'write'


    steps:
    - name: Checkout
      uses: actions/checkout@v3
      

    # Alternative option - authentication via credentials json
    - id: 'auth'
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{ secrets.GKE_SA_KEY }}'
        
        
       
    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker
        
    - name: Login to GCR
      uses: docker/login-action@v2
      with:
        registry: us-west1-docker.pkg.dev/hmscapstoneproject/hmsregistry2
        username: _json_key
        password: ${{ secrets.GKE_SA_KEY }}        
        
    #Build Gradle 
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file
    - name: Build with Gradle
      run: |
        ./gradlew bootJar -Pprod jib -Djib.to.image=us-west1-docker.pkg.dev/hmscapstoneproject/hmsrepository2/hmsnutritionist
                      
    # Get the GKE credentials so we can deploy to the cluster
#     - name: Set up GKE credentials
#       uses: google-github-actions/get-gke-credentials@v0
#       with:
#         cluster_name: ${{ env.GKE_CLUSTER }}
#         location: ${{ env.GKE_ZONE }}
  
    
    # Set up kustomize
#     - name: Set up Kustomize
#       run: |-
#         curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
#         chmod u+x ./kustomize
        
    # Deploy the Docker image to the GKE cluster
#     - name: Deploy
#       run: |-
#          ./kubectl-apply.sh -f
#          kubectl get services -o wide

    #    ./kustomize edit set image $GAR_LOCATION-docker.pkg.dev/PROJECT_ID/REPOSITORY/IMAGE:TAG=$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE
    #    ./kustomize build .
         
    #    kubectl rollout status deployment/$DEPLOYMENT_NAME
